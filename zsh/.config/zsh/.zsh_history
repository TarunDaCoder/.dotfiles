z nv
rm ~/.zsh_history
cl
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v 
v init.lua
exit
z nv
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
cl
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
exit
z nv
v 
z gh
cl
yy
cl
lg
cl
zig build -Doptimize=ReleaseFast
z
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
cl
tmux ls
cl
tmux
cl
z nv
cl
v init.lua
v init.lua
btop
cl
z nv
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
z nv
cl
lg
lg
rm startup
cl
rm startup.txt
cl
./startuptime.sh
cl
lg
v index.norg
cl
cl
l
cl
lg
v init.lua
cl
v rocks.toml
cl
v init.lua
v init.lua
v init.lua
v init.lua
nvchad init.lua
cl
v init.lua
cl
./startuptime.sh
cl
./startuptime.sh
cl
v init.lua
exit
z nv
v init.lua
v init.lua
l
cl
v init.lua
exit
zshrc
cl
zsource
cl
cl
v init.lua
v zshrc
zsource
cl
v zshrc
v .zshrc
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
cl
ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
ghostty
cl
sudo nala install wsl-setup
cl
wsl-setup
cl
cat /etc/os-release
cl
z nv
v
v .
nvim -u NORC .
v .
cl
lg
./startuptime.sh
cl
lg
cl
v init.lua
exit
z .local/share/nvim/rocks
la
z share
la
z lua
la
z 5.1
la
..
cl
la
la
..
lla
la
..
la
cl
z lib
la
z lua
la
z 5.1
la
..
..
z 5.1
la
cl
la
z start
la
pwd
cl
l
cl
la
..
la
z opt
la
..
la
..
la
z luarocks
la
cl
la
z opt
la
cl
z n
v rocks.toml
v init.lua
cl
which install
luarocks -v
luarocks --version
cl
which luarocks
z
cl
zshr
zshrc
cl
cl
z nv
v init.lua
exit
terminal-doom
zshrc
z terminal
cl
la
zig-out/bin/terminal-doom
cl
z
cl
la
cl
z nv
cl
cl
z nv
z nv
v init.lua
pastel colorcheck
cl
cowsay i have the best wpp bruh
cl
fortune | cowsay | lolcat
cl
wget "https://github.com/sharkdp/pastel/releases/download/v0.8.1/pastel_0.8.1_amd64.deb"\
\
sudo dpkg -i pastel_0.8.1_amd64.deb
cl
pastel
cl
echo 24273a | pastel color
pastel colorcheck
cl
ghostty +list-themes
cl
yy
explorer.exe .
cl
z
cl
ghostty +list-themes
cl
z dev
la
v zigzag.zig
cl
cat zigzag.zig
cl
v zigzag.zig
cl
ghostty +list-themes
cl
hx zigzag.zig
z helix
la
v config.toml
cl
hx config.toml
v config.toml
cl
hx config.toml
cl
z
z dev
cl
hx zigzag.zig
hx zigzag.zig
cl
ck
cl
la
cl
pkill ghostty
cl
z gho
v config
v kit
z kit
v kitty.conf
cl
z gho
v config
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
v config
v config
cl
tmux
ck
cl
z nv
z gho
v config
cl
z nv
v init.lua
v init.lua
v init.lua
v init.lua
cl
./startuptime.sh
v --startuptime startup.txt
v startup.txt
./startuptime.sh
c.
cl
rm startup.txt
cl
v rocks.toml
cl
v
cl
lg
cl
v init.lua
cl
fastfetch
cl
ÿßŸÉßŸÉ§ÿß ŸÉ®ÿ≥ŸÉßŸÉ§ÿß ŸÉ™ÿß ÿßÿµÿØŸÇÿßÿ¶ŸÉ™
cl
cl
z gho
v config
cl
printf "\x1b]11;rgb:0000/0000/0000\x1b\\"
cl
la
cl
z
z helix
hx config.toml
cl
hx languages.toml
cl
la
cl
z
cl
bob ls
bob update nightly
cl
bob use nightly
cl
v -v
cl
bob use 0.10.2
clc
cl
nvim -v
cl
la
cl
z nv
v init.lua
./startuptime.sh
cl
./startuptime.sh
cl
cl
lg
v init.lua
cl
./startuptime.sh
cl
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
cl
v init.lua
cl
./startuptime.sh
cl
v init.lua
cl
z
cl
la
cl
z dev
v rand.txt
cl
nvim --clean rand.txt
cl
nvim rand.txt
cl
z
z nv
cl
lg
cl
la
cl
v init.lua
cl
cat  ÿÆÿ∑ÿß ŸÅŸÉ™ ÿßÿ∂ÿßŸÅÿ© ÿßŸÉ§ÿÆÿØŸÉ•ÿ©
cl
"[200~ÿÆÿ∑ÿß ŸÅŸÉ™ ÿßÿ∂ÿßŸÅÿ© ÿßŸÉ§ÿÆÿØŸÉ•ÿ©~""  "
cl
cat "ÿÆÿ∑ÿß ŸÅŸÉ™ ÿßÿ∂ÿßŸÅÿ© ÿßŸÉ§ÿÆÿØŸÉ•ÿ©"
cl
z gho
v config
cl
cl
la
cl
cat "ÿÆÿ∑ÿß ŸÅŸÉ™ ÿßÿ∂ÿßŸÅÿ© ÿßŸÉ§ÿÆÿØŸÉ•ÿ©"
cl
cl
la
cl
la
cl
cl
v config
cl
cl
cl
cl
la
cl
nala list fontforge
sudo nala install fontforge
cl
nala list argpars
nala list argparse
cl
a dev
z dev
la
rm -rf *:Zone.Identifier
la
mkdir font-patcher
mkdir font-patcher-tmp
mv font-patcher readme.md bin src font-patcher-tmp
la
cl
la font-patcher-tmp/
mv font-patcher-tmp font-patcher
cl
la
z font-patcher
la
cl
la
v readme.md
la
z src
la
la glyphs
..
..
z font-patcher
la
cl
la bin
la bin/scripts
la bin/scripts/name_parser
python3 -m pip3 install argparse
cl
pip install argparse
pip install argparse -m
pip install argparse
cl
sudo nala install argparse
cl
la
cl
z .local/share/font
la
cl
mkdir CartographCF_NerdFont
cp CartographCFNerdFontMono-BoldItalic.ttf CartographCFNerdFontMono-Bold.ttf CartographCFNerdFontMono-Italic.ttf CartographCFNerdFontMono-Regular.ttf CartographCF_NerdFont
cl
mv CartographCF_NerdFont ~/dev/font-patcher
z font
cl
la
la
cl
fontforge -script font-patcher CartographCF_NerdFont/CartographCFNerdFontMono-Regular.ttf
cl
la
fontforge -script font-patcher CartographCF_NerdFont/CartographCFNerdFontMono-Bold.ttf
cl
fontforge -script font-patcher CartographCF_NerdFont/CartographCFNerdFontMono-BoldItalic.ttf
cl
fontforge -script font-patcher CartographCF_NerdFont/CartographCFNerdFontMono-Italic.ttf
cl
la
mv CartographCFNerdFontMonoNerdFont-BoldItalic.ttf CartographCFNerdFontMono-Regular.ttf
mv CartographCFNerdFontMono-Regular.ttf CartographCFNerdFontMono-BoldItalic.ttf
mv CartographCFNerdFontMonoNerdFont-Bold.ttf CartographCFNerdFontMono-Bold.ttf
mv CartographCFNerdFontMonoNerdFont-Italic.ttf CartographCFNerdFontMono-Italic.ttf
mv CartographCFNerdFontMonoNerdFont-Regular.ttf CartographCFNerdFontMono-Regular.ttf
cl
cl
la
mv CartographCF_NerdFont CartographCF_NerdFont_Old
c
cl
z .local/share/font
cl
la
cl
mkdir CartographCF_NerdFont
mv CartographCFNerdFontMono* CartographCF_NerdFont
la
cl
la | fzf
cl
la
cl
z font-
la
mv CartographCFNerdFontMono-BoldItalic.ttf CartographCFNerdFontMono-Bold.ttf CartographCFNerdFontMono-Italic.ttf CartographCFNerdFontMono-Regular.ttf ~/.local/share/fonts/
cl
la
cl
la
cl
la
cl
z nv
cl
la
cl
fastfetch
neofecth
neofetch
cl
fastfetch --help
z fastfetch
cl
la
mv config.jsonc config-tmp.jsonc
fastfetch
mv config-tmp.jsonc config.jsonc
cl
fastfetch
la
cl
z gho
cl
la
cl
v config
z gho
v config
cl
z nv
cl
la
cl
z g
cl
la
v config
cl
la
cl
z
cl
tmux
z gho
v config
cl
z
cl
tmux a
z gho
v config
cl
cl
v config
cl
cl
cl
la
cl
cl
la
z n
cl
v init.lua
cl
la
cl
echo 1f480
echo "1f480"
cl
cl
la
cl
la
cl
z 
cl
tmux a
cl
cl
cl
la
la
cl
z nv
v init.lua
z gho
v config
v config
cl
cl
la
cl
v config
cl
z nv
v init.lua
cl
z gho
cl
v init.lua
v config
cl
la
v config
cl
la
z nv
v init.lua
cl
sudo nala install sl
cl
sl | lolcat
cl
sudo nala install cbonsai
cl
sudo nala install cbonsai
cl
z stars
cl
la
v init.lua
v starship.toml
cl
z awrit
la
cl
sudo nala install cbonsai
cl
cbonsai
cl
sudo nala install build-essential ninja-build cmake
cl
z dev
z github
la
cl
gh repo clone chase/awrit
cl
z awrit
la
cl
cl
cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release -S . -B build\
\
cmake --build build\
\
\
\
# The resulting build will be located in build/awrit/Release\
\
# The build can be run from the top-level directory with ./build/awrit/Release/awrit
cl
cl
cmake --install build --prefix ~/.local
cl
awrit
c
ck
cl
la
sudo nala install cbonsai
cl
cbonsai
cl
sudo nala install build-essential ninja-build cmake
cl
z dev
z github
la
cl
gh repo clone chase/awrit
cl
z awrit
la
cl
cl
cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release -S . -B build\
\
cmake --build build\
\
\
\
# The resulting build will be located in build/awrit/Release\
\
# The build can be run from the top-level directory with ./build/awrit/Release/awrit
cl
cl
cmake --install build --prefix ~/.local
cl
awrit
c
ck
cl
la
awrit
cl
cl
awrit
cl
sudo nala install emacs
cl
mkdir .config/emacs && touch .config/emacs/init.el
cl
z emacs
z .c
z emacs
cl
la
cl
emacs init.el
emacs -nw init.el
cl
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\
\
~/.config/emacs/bin/doom install
cl
..
mv emacs emacs.bak
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs\
\
~/.config/emacs/bin/doom install
cl
la
cl
z emacs
la
cl
zshrc
cl
la
cl
z nv
cl
emacs -nw init.lua
cl
la
cl
emacs init.el
la
cl
..
la
cl
z emacs
la
cl
cl
la
cl
la
v .doomrc
emacs -nw .doomrc
cl
z n
v init.lua
cl
node
cl
cl
z
cl
node
cl
node
cl
z dev
cl
v kat.cpp
gcc kat.cpp 
la
./a.out
rm a.out kat.cpp
cl
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
z nv
cl
la
cl
v init.lua
z care-te
al
la
cl
v style.css
cl
tailwindcss-language-server --stdio
cl
z nv
v init.lua
npm install -g @tailwindcss/language-server
cl
la
cl
z muse
al
la
cl
v app.css
cl
z nv
v init.lua
cl
v init.lua
v init.lua
cl
v init.lua
v init.lua
v init.lua
v init.lua
v rocks.toml
taplo format rocks.toml
cl
v rocks.toml
cl
v init.lua
cl
v init.lua
cl
v init.lua
cl
v init.lua
v init.lua
cl
v init.lua
v init.lua
v init.lua
cl
z start
lc
la
cl
z care.nvim
la
v lua/care/ghost_text.lua
z nv
v init.lua
cl
z nv
z mus
v app.css
cl
z care
la
cl
pwd
lg
 ..
z care-cmp
lg
cl
z n
cl
cl
l
z dev
cl
mkdir care-test
z care-test
v app.css
cl
z nv
v init.lua
cl
lg
z care-
z care-te
la
cl
v app.css
cl
z nv
v init.lua
cl
z care-te
cl
v app.css
cl
z nv
v init.lua
cl
z care-te
cl
v app.css
cl
z nv
v init.lua
cl
z care-te
cl
la
v app.css
cl
z nv
v init.lua
z care-te
v app.css
cl
z nv
v init.lua
cl
v app.css
cl
z care-te
npm i -g tailwindcss
cl
la
cl
npm uninstall -g tailwindcss
npm i tailwindcss
cl
la
cl
v index.html
cl
npx tailwindcss init
la
v index.html
cl
..
z nv
v init.lua
cl
cl
la
cl
z care-te
v app.css
cl
l
cl
la
..
mkdir cssls
z cssls
v app.css
cl
..
rm -rf cssls
la
cl
z nv
z care.nvim
pwd
cl
v lua/care/ghost_text.lua
cl
z nv
v init.lua
v init.lua
v init.lua
cl
v init.lua
cl
lg
cl
cl
cl
la
cl
la
cl
..
cl
la
cl
rm -rf care_minimal
mkdir care-test
z care-test
cl
la
v init.lua
c
cl
la
NVIM_APPNAME="care-test" nvim init.lua
NVIM_APPNAME="care-test" nvim init.lua
la
NVIM_APPNAME="care-test" nvim init.lua
nvim -u init.lua
nvim -u init.lua init.lua
la
z .repo
z .repro
la
cl
la
z config
la
z care-test
la
..
z nvim
la
..
cl
..
la
z syaye
z state
la
z care-test
la
z lazy
la
z readme
la
..
..
..
..
..
cl
la
z .local/share/nvim
la
..
la
z care-test
la
cl
z .config/care
la
cl
la
cl
nvim -u init.lua init.lua
cl
la
cl
..
la
cl
z nv
v init.lua
z care.nvim
la
v lua/care/ghost_text.lua
z nv
v init.lua
z care.nvim
v lua/care/ghost_text.lua
cl
z nv
v init.lua
z care.nvim
v init.lua
v lua/care/ghost_text.lua
z nv
v init.lua
v init.lua
cl
lg
cl
cl
la
cl
v init.lua
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
z care-tes
la
cl
nvim -u init.lua init.lua
..
z nvim
v init.lua
cl
v init.lua
v init.lua
cl
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
cl
v init.lua
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
z nv
v init.lua
v init.lua
v init.lua
v init.lua
cl
v init.lua
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
cl
z gh
la
v config
cl
cl
la
v .config/ghostty/config
v .config/ghostty/config
cl
v .config/ghostty/config
v .config/ghostty/config
v .config/ghostty/config
cl
la
cl
 rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz
sudo  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz
c;
cl
go
cl
v .config/ghostty/config
v .config/ghostty/config
v .config/ghostty/config
cl
la
z
cl
fastfetch
cl
la
cl
v .config/ghostty/config
cl
cl
la
cl
la
cl
z gho
la
la
cl
v gradient.glsl
v config
l
la
cl
la
v config
la
v config
cl
z gho
la
CL
LA
cl
la
cl
v config
la
cl
v config
glxinfo | grep "OpenGL Version"
cl
glxinfo
cl
glxinfo
glxgears
sudo adduser tarun video
cl
v config
cl
la
cl
v config
v config
v config
cl
z github/gh
la
cl
lg
c
cl
zig build -Doptimize=ReleaseFast
cl
z ghp
z gho
la
v config
cl
v config
cl
la
v config
fastfetch
cl
v config
c
cl
la
cl
z
cl
stow help
stow --help
cl
unlink .config
la
cl
la
la .dotfiles
mv .dotfiles/.config/ .
mv .dotfiles/zshrc .
cl
la
cl
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
z gho
v gradient.glsl
cl
la
cl
z kum
la
cl
v .wezterm.lua
c
z
cl
la
rm -rf .dotfiles
cl
la
cl
zsource
cl
z gho
v config
v gradient.glsl
cl
v config
v config
cl
z gho
cl
la
v config
cl
la
v gradient.glsl
cl
v gradient.glsl
cl
cl
la
cl
la
la
cl
v config 
v config 
v gradient.glsl
z kum
v .wezterm.lua
z nv
cl
z gho
la
cl
cl
la
cl
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
z nv
v init.lua
cl
la
cl
z gho
la
v config
cl
z
cl
nvim -u NONE .config/nvim/init.lua
cl
v -v
cl
la
cl
bob use 0.9.5
cl
la
nvim -u NONE .config/nvim/init.lua
cl
bob use 0.10.2
cl
bob use nightly
cl
nvim 0v
nvim -v
cl
cl
node
cl
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
la
cl
cl
nala list imagemagick
sudo nala install imagemagick-devel
sudo nala install imagemagick
z dev
yy
cl
nala list magick
cl
z
cl
imagemagick
cl
cl
zshrc
z nv
v init.lua
v init.lua
v init.lua
v init.lua
cl
zshrc
zshrc
cl
z
cl
zsource
cl
clear
la
cl
cl
la
cl
zshrc
cat .config/ghostty/config
cl
z kit
v kitty.conf
cl
v kitty.conf
v .config/kitty/kitty.conf
cl
v .config/kitty/kitty.conf
cl
la
cl
awrit https://github.com/TarunDaCoder/AlphaNvim
awrit
cl
la
cl
pkill ghostty
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
ghostty
cl
z github/gh
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
z gho
la
z github/gh
cl
lg
lg
cl
zig build -Doptimize=ReleaseFast
cl
z gh
v config
cl
zlc
z
cl
z nv
v init.lua
v init.lua
v init.lua
cl
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
v init.lua
cl
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
z dev
kitten icat wallhaven-m9y289.webp
ghostty
cl
btop
c
kitten icat wallhaven-m9y289.webp
z dev
cl
kitten icat wallhaven-m9y289.webp
pkill ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
v rand.txt
hx rand.txt
cl
v rand.txt
cl
\
\
‡§®‡•Éß‡§™‡§æ‡§≤ ‡§ÉØ‡§Éµ ‡§∏‡•Å‡§®‡•É≠‡§¶‡§∞ ‡§¶‡•Éß‡§∂ ‡§π‡•É´ ‡§Éº‡§∏‡§Éµ‡•É´ ‡§™‡•É≠‡§∞‡§æ‡§Éµ‡•É£‡§§‡§ø‡§Éµ ‡§∏‡•É¨‡§®‡•É≠‡§¶‡§∞‡•É≠‡§Ø, ‡§∏‡§æ‡§Ç‡§∏‡•É≠‡§Éµ‡•É£‡§§‡§ø‡§Éµ ‡§µ‡§ø‡§µ‡§ø‡§ß‡§§‡§æ ‡§∞ ‡§É∞‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§Éµ ‡§Æ‡§π‡§§‡•É≠‡§µ‡§≤‡•Éß ‡§≠‡§∞‡§ø‡§™‡•Ç‡§∞‡•É≠‡§£ ‡§Éª‡•§ ‡§π‡§ø‡§Æ‡§æ‡§≤, ‡§™‡§π‡§æ‡§ÉÅ ‡§∞ ‡§§‡§∞‡§æ‡§É®‡§Éµ‡•É´ ‡§Æ‡§ø‡§∂‡•É≠‡§∞‡§£‡§≤‡•Éß ‡§®‡•Éß‡§™‡§æ‡§≤‡§≤‡§æ‡§É® ‡§µ‡§ø‡§∂‡•Éß‡§∑ ‡§¨‡§®‡§æ‡§ÉØ‡§Éµ‡•É´ ‡§Éª‡•§ ‡§Ø
cl
hx rand.txt
cl
z gh
v config
z .local/share/fonts
la
z gho
v config
v config
cl
z
cl
hx rand.txt
cl
‡§®‡•Éß‡§™‡§æ‡§≤ ‡§ÉØ‡§Éµ ‡§∏‡•Å‡§®‡•É≠‡§¶‡§∞ ‡§¶‡•Éß‡§∂ ‡§π‡•É´ ‡§Éº‡§∏‡§Éµ‡•É´ ‡§™‡•É≠‡§∞‡§æ‡§Éµ‡•É£‡§§‡§ø‡§Éµ ‡§∏‡•É¨‡§®‡•É≠‡§¶‡§∞‡•É≠‡§Ø, ‡§∏‡§æ‡§Ç‡§∏‡•É≠‡§Éµ‡•É£‡§§‡§ø‡§Éµ ‡§µ‡§ø‡§µ‡§ø‡§ß‡§§‡§æ ‡§∞ ‡§É∞‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§Éµ ‡§Æ‡§π‡§§‡•É≠‡§µ‡§≤‡•Éß ‡§≠‡§∞‡§ø‡§™‡•Ç‡§∞‡•É≠‡§£ ‡§Éª‡•§ ‡§π‡§ø‡§Æ‡§æ‡§≤, ‡§™‡§π‡§æ‡§ÉÅ ‡§∞ ‡§§‡§∞‡§æ‡§É®‡§Éµ‡•É´ ‡§Æ‡§ø‡§∂‡•É≠‡§∞‡§£‡§≤‡•Éß ‡§®‡•Éß‡§™‡§æ‡§≤‡§≤‡§æ‡§É® ‡§µ‡§ø‡§∂‡•Éß‡§∑ ‡§¨‡§®‡§æ‡§ÉØ‡§Éµ‡•É´ ‡§Éª‡•§ ‡§Ø‡§π‡§æ‡§Å‡§Éµ‡§æ ‡§Æ‡§æ‡§®‡§ø‡§∏‡§π‡§∞‡•Ç ‡§É¶‡§´‡•É≠‡§®‡§æ 
cl
sudo nala update
cl
sudo nala upgrade
cl
cl
hx rand.txt
cl
la
cl
kitty
set | grep DISPLAY
cl
la
cl
kitty
export DISPLAY=0.0
xeyes
cl
export DISPLAY=:0.0
xeyes
export DISPLAY=:0
xeyes
cl
kitty
cl
la
cl
z dev
la
z gho
v config
cl
cl
la
cl
z
cl
z dev
la
mkdir fonts
mv font-patcher fonts/
rm -rf *:Zone.Identifier
cl
z fonts
cl
la
gh repo clone xiyaowong/Cartograph-CF
z Cartograph-CF
cl
la
nautilus . &
cl
la
explorer.exe .
cl
la
..
cl
la
rm -rf *:Zone.Identifier
cl
la
cl
z font-patcher
la
..
cl
la
mkdir CartographCF-Mono/
mv CartographCF_Mono
mv CartographCF-Mono CartographCF_Mono
la
cl
mv CartographCF-* CartographCF_Mono/
la
la CartographCF_Mono
mv CartographCF_Mono CartographCF-Mono
la
cl
z font-patcher
la
pkill ghostty
cl
z gho
v config
cl
cl
z kum
z Downloads
la
cl
la | fzf
z cartogrpah
z cartograph
la
..
la
z CartographCF-Mono
l
cl
la
cl
al
cl
..
la
cl
mv icomoon.ttf neorg.ttf
la
cl
cp neorg.ttf ~/.local/share/fonts
la ~/.local/share/fonts | fzf
builtin cd -- /home/tarun/dev/fonts/font-patcher/src/glyphs
builtin cd -- /home/tarun/dev/fonts/font-patcher/src/glyphs/materialdesign
cl
z CartographCF-Mono
cl
la
..
cl
z nv
v init.lua
clear
la
cl
la
c
cl
z gho
la
v config
la ~/.local/share/fonts | fzf
v config
ghostty
cl
fastfetch
cl
la
cl
kitty
ghostty
cl
echo DISPLAY
cl
echo $DISPLAY
cl
cl
la
cl
la
cl
la
cl
echo
echo $DISPLAY
export DISPLAY=:0
la
cl
ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
ghostty
cl
kitty
cl
ghostty
cl
ln -sf  /mnt/wslg/runtime-dir/wayland-* $XDG_RUNTIME_DIR/
cl
ghostty
cl
z fgo
z gho
v config
z nv
v init.lua
cl
la
cl
cl
z gho
v config
cl
z nv
v init.lua
cl
z config
z gho
v config
cl
la
cl
z
cl
z nv
v init.lua
cl
printf "\U1F642\U200D\U2194\UFE0F"
cl
z github/gh
lg
cl
zig build -Doptimize=ReleaseFast
la
cl
cat .config/ghostty/config
cl
printf "\U1F642\U200D\U2194\UFE0F"
cl
la
cl
z nv
v init.lua
ghostty +version
cl
la
z gho
v config
cl
la
z nv
v init.lua
cl
ghostty +list-themes
cl
cl
la
cl
lg
v init.lua
v init.lua
cl
la
cl
la
cl
cl
z dev
la
z font
la
cl
z dev
la
z fonts
la
cl
la
mkdir neorg-icon/
mv neorg.ttf neorg-icon
la
cl
sudo nala install python-is-python3
cl
pkill ghostty
la
cl
la
cl
git clone https://github.com/subframe7536/maple-font --depth 1 -b variable\
pip install foundrytools-cli\
python build.py
cl
la
cl
z maple-font
la
cl
pip install foundrytools-cli
python build.py
cl
pip install foundrytools-cli
pipx install foundtytools-cli
cl
cl
la
cl
cl
la
cl
z tailwind
cl
la
cl
z dev
la
z care-test
la
cl
fastfetch
cl
kitty
cl
fastfetch
cl
la
cl
v test.css
sudo nala install tmate
cl
tmate
cl
cl
la
cl
cl
z fonts
la
z dev/fonts
la
cl
la
tar -help
tar --usage
cl
unzip MapleMono-NF.zip
cl
la
rm -rf MapleMono-NF.zip MapleMono-NF.zip:Zone.Identifier
cl
mv MapleMono-NF-* ~/.local/share/fonts
cl
z
cl
z gho
v config
cl
la
v config
v config
clv
cl
v config
cl
la ~/.local/share/fonts | fzf
cl
v config
cl
ghostty
cl
ghostty +list-fonts | grep Maple
z gho
v config
cl
cl
la
z nv
v init.lua
z
cl
v chinese.txt
cl
cat chinese.txt
cl
rm chinese.txt
cl
z dev
la
z fonts
la
rm -rf maple-font
cl
z
cl
z gho
v config
v config
cl
v config
z
cl
z dev/fonts
la
rm -rf *:Zone.Identifier
cl
unzip MapleMono-TTF.zip
cl
la
rm -rf LICENSE.txt config.json
la
mv MapleMono-*.ttf ~/.local/share/fonts/
la
la ~/.local/share/fonts | fzf
cl
ghostty +list-fonts | grep Maple
cl
z gho
v config
cl
cl
la
la
v ini
cl
v config
ghostty +list-fonts | grep Maple
v config
cl
la
cl
ghostty +list-fonts | grep Maple
cl
z config
z gho
la
cl
v config
cl
ghostty
CL
C
cl
sudo nala install libadwaita-devel
nala list adwaita
cl
sudo nala install libadwaita-1-dev
la
cl
z nv
v init.lua
cl
z gho
v config
ghostty +list-fonts | grep Maple
v config
cl
la
c
cl
la
cl
cl
cl
la
cl
la
cl
z nv
cl
la
v ini
v init.lua
cl
lg
v init.lua
cl
z gho
v config
cl
cl
z nv
v init.lua
l
cl
btop
cl
v stylua.toml
v init.lua
z nv
v init.lua
v init.lua
z github/gh
la
z share
cl
la
z $INSTALL_DIR
cl
la
z share
cl
z github/gh
la
z zig-out
la
cl
z share
la
z vim
la
z vimfiles
la
z nv
v rocks.toml
v init.lua
v rocks.toml
cl
v init.lua
v init.lua
v rocks.toml
cl
cl
z gho
v config
cl
lz
cl
z nv
v rocks.toml
z share
z zig-out/share
la
cl
z vim
z vimfiles
la
v init.vim
cl
z nv
v rocks.toml
v init.lua
z gho
v config
cl
z zig-out
cl
la
z share
la
z vim
la
z vimfiles
la
la ftdetect
la ftplugin
la syntax
pwd
cl
la
